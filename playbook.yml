---
- hosts: all

  vars:
    apt_file: /etc/apt/sources.list.d/google-chrome.list
    user: vagrant
    zsh_theme: steeef
    worblehat_db: worblehat_test
    worblehat_user: worblehat
    docker_compose_version: 1.21.2
    docker_compose_bin: /usr/local/bin/docker-compose

  tasks:
    # Adding google chrome 
    - name: Does the Google apt file exist?
      become: True
      command: test -f {{ apt_file }}
      register: google_apt_exists
      ignore_errors: True

    - name: Add Google Chrome key
      become: True
      shell: wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
      when: google_apt_exists.rc == 1

    - name: Add Google Chrome repo
      become: True
      shell: echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | sudo tee /etc/apt/sources.list.d/google-chrome.list
      when: google_apt_exists.rc == 1
    
    - name: add microsoft gpg
      become: True
      shell: 
        cmd: |
          curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
          sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EB3E94ADBE1229CF
    
    - name: add vs code repo
      become: true
      shell:
        cmd:
          sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'


    - name: Update apt cache
      become: True
      apt: update_cache=yes

    - name: Install Google Chrome
      become: True
      apt: pkg=google-chrome-stable state=present

    - name: add openjdk repo to enable download of openjdk-8
      become: True
      apt_repository:
        repo=ppa:openjdk-r/ppa
        state=present
    
    - name: add intellj repo
      become: True
      apt_repository:
        repo=ppa:mmk2410/intellij-idea
        state=present

    #Configuring java
    - name: installing java 8
      become: True
      apt:
        name : [openjdk-8-jdk]
        update_cache: yes

    #Adding additional requirements
    - name: install zsh, git, curl, maven, vim, mysql-server, python-mysqldb, xterm
      become: True
      apt:
        name : [zsh, git, maven, gradle, vim, xterm, intellij-idea-community, language-pack-de, python3.6, python3-pip, mysql-server, python3-pymysql]
        update_cache: yes
    
    - name: install German language
      become: true
      apt:
        name: [wngerman, wswiss, gnome-user-docs-de, libreoffice-l10n-de, hunspell-de-ch-frami, language-pack-gnome-de, hunspell-de-de-frami, mythes-de-ch, wogerman,
                hyphen-de, firefox-locale-de, hunspell-de-at-frami, thunderbird-locale-de, mythes-de ,libreoffice-help-de, vlc]
    
    - name: Ensure a locale exists
      locale_gen:
        name: de_DE.UTF-8
        state: present


    #Shell beautification
    - name: Clone oh-my-zsh repo
      become: True
      git: 
        repo: https://github.com/robbyrussell/oh-my-zsh.git 
        dest: /home/{{ user }}/.oh-my-zsh
        clone: yes

    - name: Set zsh as default shell
      become: True
      user: name={{ user }} shell=/bin/zsh

    - name: Create conf folder in home directory
      file: path=/home/{{ user }}/conf state=directory owner={{ user }}

    - name: deploy .zshrc
      template: src=files/zshrc.sh dest=/home/{{ user }}/conf/zshrc owner={{ user }}

    - name: remove standard zshrc
      file: path=/home/{{ user }}/.zshrc state=absent

    - name: symlink zshrc
      file: path=/home/{{ user }}/.zshrc src=/home/{{ user }}/conf/zshrc state=link owner={{ user }}

    - name: Add Docker GPG key
      become: True
      apt_key: 
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker APT repository
      become: True
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable

    - name: Install list of packages
      become: True
      apt:
        name: ['apt-transport-https','ca-certificates','curl','software-properties-common','docker-ce']
        state: present
        update_cache: yes
    
    - name: Install VS Code
      become: true
      apt: 
        name: 'code' 
        state: present
        update_cache: yes
  

    - name: Adding Docker to vagrant user {{ user }}  
      user: 
        name: '{{ user }}'
        groups: docker
        append: yes
      become: True

    - name: Ensure docker deamon is running
      become: True
      service:
        name: docker
        state: started

    - name: Install docker-compose
      become: True
      apt:
        name: docker-compose
        state: present
        update_cache: yes
    
    - name: install pip3 components 
      pip:
        name: 
          - jupyter
          - Keras-Preprocessing>=1.0.8
          - Keras-Applications>=1.0.7
          - matplotlib>=1.4.3
          - numpy>=1.16.0
          - pandas>=0.19
          - scipy>=0.15.1
          - scikit-learn>=0.18
          - tensorboard>=1.12.2
          - tensorflow>=1.12.0
          - seaborn
          - psutil
        executable: pip3


    - name: 3. Set MySQL root password before installing
      become: True
      debconf: name='mysql-server' question='mysql-server/root_password' value='wordpass'
      debconf: name='mysql-server' question='mysql-server/root_password_again' value='wordpass' vtype='password'

       
    - name: Ensure mysql is running and starts on boot
      service:
        name: mysql
        state: started
        enabled: yes
      become: yes

    - name: create empty Worblehat database
      become: True
      mysql_db:
        login_unix_socket: /var/run/mysqld/mysqld.sock
        login_user: 'root'
        login_password: 'wordpass'
        name: "{{ worblehat_db }}"
        state: present

    - name: create Worblehat database user
      become: True
      mysql_user:
        login_unix_socket: /var/run/mysqld/mysqld.sock
        login_user: 'root'
        login_password: 'wordpass'
        name: '{{ worblehat_user }}'
        password: '{{ worblehat_user }}'
        state: 'present'
        priv: '{{ worblehat_db }}.*:ALL,GRANT'

    - name: Change timezone
      become: True
      shell: timedatectl set-timezone Europe/Berlin

    - name: Configure available keyboard layouts in Gnome
      become: True
      shell: "L='de' && sudo sed -i 's/XKBLAYOUT=\"\\w*\"/XKBLAYOUT=\"'$L'\"/g' /etc/default/keyboard"
